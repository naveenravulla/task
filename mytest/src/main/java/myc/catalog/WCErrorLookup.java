/*
* Autogenerated code. Please DO NOT EDIT 
*/

package wavecrest.catalog;
import wavecrest.cardmanager.enums.*;
import wavecrest.postman.enums.*;
import wavecrest.orchestration.enums.*;
import wavecrest.program.enums.*;
import wavecrest.pimanager.enums.*;
import wavecrest.cardmanager.enums.*;
import wavecrest.foundation.enums.*;
import wavecrest.foundation.util.*;
import wavecrest.cardmanager.enums.*;
import wavecrest.cardmanager.enums.*;
import wavecrest.usermanager.enums.*;
import wavecrest.txnmanager.enums.*;
import wavecrest.orchestration.enums.*;
import wavecrest.integration.enums.*;
import wavecrest.pimanager.enums.*;
import wavecrest.docupload.enums.*;
import wavecrest.usermanager.enums.*;
import wavecrest.billpay.enums.*;
import wavecrest.cardmanager.enums.*;
import wavecrest.program.enums.*;


import java.util.HashMap;
import java.util.Map;
public class WCErrorLookup {
  private static Map errorTypeValuesMap = new HashMap<String,Map>(10);
  private static Map errorTypePkgMap = new HashMap<String,String>(10);
  static {
    
       errorTypeValuesMap.put("InvErrorCodeEnum", InvErrorCodeEnum.getMap());
    
       errorTypeValuesMap.put("PostmanErrorCodeEnum", PostmanErrorCodeEnum.getMap());
    
       errorTypeValuesMap.put("OrchestrationMessage", OrchestrationMessage.getMap());
    
       errorTypeValuesMap.put("ProgramServiceMessage", ProgramServiceMessage.getMap());
    
       errorTypeValuesMap.put("InstrumentResponses", InstrumentResponses.getMap());
    
       errorTypeValuesMap.put("CardManagerMessage", CardManagerMessage.getMap());
    
       errorTypeValuesMap.put("RuleErrorCode", RuleErrorCode.getMap());
    
       errorTypeValuesMap.put("DEMessage", DEMessage.getMap());
    
       errorTypeValuesMap.put("LostStolenStatus", LostStolenStatus.getMap());
    
       errorTypeValuesMap.put("LineType", LineType.getMap());
    
       errorTypeValuesMap.put("UserMessage", UserMessage.getMap());
    
       errorTypeValuesMap.put("TxnManagerMessage", TxnManagerMessage.getMap());
    
       errorTypeValuesMap.put("FnrMessage", FnrMessage.getMap());
    
       errorTypeValuesMap.put("BillPayErrorCodeEnum", BillPayErrorCodeEnum.getMap());
    
       errorTypeValuesMap.put("PIManagerMessage", PIManagerMessage.getMap());
    
       errorTypeValuesMap.put("DUError", DUError.getMap());
    
       errorTypeValuesMap.put("Message", Message.getMap());
    
       errorTypeValuesMap.put("O2ErrorEnum", O2ErrorEnum.getMap());
    
       errorTypeValuesMap.put("InvWicsAPIErrorCodeEnum", InvWicsAPIErrorCodeEnum.getMap());
    
       errorTypeValuesMap.put("ProgramSubscriptionType", ProgramSubscriptionType.getMap());
    

     
       
       errorTypePkgMap.put("InvErrorCodeEnum", "wavecrest.cardmanager.enums");
     
       
       errorTypePkgMap.put("PostmanErrorCodeEnum", "wavecrest.postman.enums");
     
       
       errorTypePkgMap.put("OrchestrationMessage", "wavecrest.orchestration.enums");
     
       
       errorTypePkgMap.put("ProgramServiceMessage", "wavecrest.program.enums");
     
       
       errorTypePkgMap.put("InstrumentResponses", "wavecrest.pimanager.enums");
     
       
       errorTypePkgMap.put("CardManagerMessage", "wavecrest.cardmanager.enums");
     
       
       errorTypePkgMap.put("RuleErrorCode", "wavecrest.foundation.enums");
     
       
       errorTypePkgMap.put("DEMessage", "wavecrest.foundation.util");
     
       
       errorTypePkgMap.put("LostStolenStatus", "wavecrest.cardmanager.enums");
     
       
       errorTypePkgMap.put("LineType", "wavecrest.cardmanager.enums");
     
       
       errorTypePkgMap.put("UserMessage", "wavecrest.usermanager.enums");
     
       
       errorTypePkgMap.put("TxnManagerMessage", "wavecrest.txnmanager.enums");
     
       
       errorTypePkgMap.put("FnrMessage", "wavecrest.orchestration.enums");
     
       
       errorTypePkgMap.put("BillPayErrorCodeEnum", "wavecrest.integration.enums");
     
       
       errorTypePkgMap.put("PIManagerMessage", "wavecrest.pimanager.enums");
     
       
       errorTypePkgMap.put("DUError", "wavecrest.docupload.enums");
     
       
       errorTypePkgMap.put("Message", "wavecrest.usermanager.enums");
     
       
       errorTypePkgMap.put("O2ErrorEnum", "wavecrest.billpay.enums");
     
       
       errorTypePkgMap.put("InvWicsAPIErrorCodeEnum", "wavecrest.cardmanager.enums");
     
       
       errorTypePkgMap.put("ProgramSubscriptionType", "wavecrest.program.enums");
    
  }

  public static Enum<?> lookupByName (String enumFullName) throws ClassNotFoundException {
      String[] x = enumFullName.split("\\."); // Split a enum of form <EnumClass>.<EnumName>
      //System.out.println ("LOOKUPBYNAME : " + enumFullName);
      String enumClassName = x[0];
      String enumName = x[1];

      @SuppressWarnings("unchecked")
      final Class<Enum> cl = (Class<Enum>)Class.forName(errorTypePkgMap.get(enumClassName) + "." +enumClassName);

      @SuppressWarnings("unchecked")
      final Enum result = Enum.valueOf(cl, enumName);
      return result;
  }

	public static Object lookup (int value) {
    Object val = null;
   
    
    val = InvErrorCodeEnum.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = PostmanErrorCodeEnum.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = OrchestrationMessage.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = ProgramServiceMessage.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = InstrumentResponses.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = CardManagerMessage.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = RuleErrorCode.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = DEMessage.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = LostStolenStatus.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = LineType.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = UserMessage.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = TxnManagerMessage.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = FnrMessage.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = BillPayErrorCodeEnum.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = PIManagerMessage.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = DUError.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = Message.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = O2ErrorEnum.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = InvWicsAPIErrorCodeEnum.valueOfNoException(value);
    if (val != null) return val;
   
    
    val = ProgramSubscriptionType.valueOfNoException(value);
    if (val != null) return val;
   
    return null;
	}

  /* Values of a given error enum class. Return type is a map of integer keys and err enum instance value */
  public static Map getErrTypeValues (String errclass) {
    return (Map) errorTypeValuesMap.get(errclass);
  }
}

